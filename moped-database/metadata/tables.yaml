- table:
    name: component_arcgis_online_view
    schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - length_feet_total
          - is_project_component_deleted
          - is_project_deleted
          - completion_end_date
          - construction_start_date
          - component_id
          - component_phase_id
          - interim_project_component_id
          - interim_project_id
          - project_component_id
          - project_id
          - project_phase_id
          - geometry
          - added_by
          - component_description
          - component_name
          - component_name_full
          - component_phase_name
          - component_phase_name_simple
          - component_subtype
          - component_tags
          - component_url
          - contract_numbers
          - contractors
          - council_districts
          - current_phase_name
          - current_phase_name_simple
          - ecapris_subproject_id
          - feature_ids
          - funding_source_name
          - location_description
          - project_description
          - project_designer
          - project_inspector
          - project_lead
          - project_name
          - project_note
          - project_note_date_created
          - project_partner
          - project_phase_name
          - project_phase_name_simple
          - project_sponsor
          - project_tags
          - project_team_members
          - project_url
          - public_process_status
          - signal_ids
          - srts_id
          - subcomponents
          - task_order_names
          - type_name
          - work_types
          - completion_date
          - updated_at
        filter: {}
      comment: ""
    - role: moped-editor
      permission:
        columns:
          - length_feet_total
          - is_project_component_deleted
          - is_project_deleted
          - completion_end_date
          - construction_start_date
          - component_id
          - component_phase_id
          - interim_project_component_id
          - interim_project_id
          - project_component_id
          - project_id
          - project_phase_id
          - geometry
          - added_by
          - component_description
          - component_name
          - component_name_full
          - component_phase_name
          - component_phase_name_simple
          - component_subtype
          - component_tags
          - component_url
          - contract_numbers
          - contractors
          - council_districts
          - current_phase_name
          - current_phase_name_simple
          - ecapris_subproject_id
          - feature_ids
          - funding_source_name
          - location_description
          - project_description
          - project_designer
          - project_inspector
          - project_lead
          - project_name
          - project_note
          - project_note_date_created
          - project_partner
          - project_phase_name
          - project_phase_name_simple
          - project_sponsor
          - project_tags
          - project_team_members
          - project_url
          - public_process_status
          - signal_ids
          - srts_id
          - subcomponents
          - task_order_names
          - type_name
          - work_types
          - completion_date
          - updated_at
        filter: {}
      comment: ""
    - role: moped-viewer
      permission:
        columns:
          - length_feet_total
          - is_project_component_deleted
          - is_project_deleted
          - completion_end_date
          - construction_start_date
          - component_id
          - component_phase_id
          - interim_project_component_id
          - interim_project_id
          - project_component_id
          - project_id
          - project_phase_id
          - geometry
          - added_by
          - component_description
          - component_name
          - component_name_full
          - component_phase_name
          - component_phase_name_simple
          - component_subtype
          - component_tags
          - component_url
          - contract_numbers
          - contractors
          - council_districts
          - current_phase_name
          - current_phase_name_simple
          - ecapris_subproject_id
          - feature_ids
          - funding_source_name
          - location_description
          - project_description
          - project_designer
          - project_inspector
          - project_lead
          - project_name
          - project_note
          - project_note_date_created
          - project_partner
          - project_phase_name
          - project_phase_name_simple
          - project_sponsor
          - project_tags
          - project_team_members
          - project_url
          - public_process_status
          - signal_ids
          - srts_id
          - subcomponents
          - task_order_names
          - type_name
          - work_types
          - completion_date
          - updated_at
        filter: {}
      comment: ""
- table:
    name: current_phase_view
    schema: public
  object_relationships:
    - name: moped_phase
      using:
        manual_configuration:
          column_mapping:
            phase_id: phase_id
          insertion_order: null
          remote_table:
            name: moped_phases
            schema: public
    - name: moped_proj_phase
      using:
        manual_configuration:
          column_mapping:
            project_phase_id: project_phase_id
          insertion_order: null
          remote_table:
            name: moped_proj_phases
            schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - phase_id
          - project_id
          - project_phase_id
          - phase_key
          - phase_name
          - phase_name_simple
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - phase_id
          - project_id
          - project_phase_id
          - phase_key
          - phase_name
          - phase_name_simple
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - phase_id
          - project_id
          - project_phase_id
          - phase_key
          - phase_name
          - phase_name_simple
        filter: {}
        allow_aggregations: true
- table:
    name: feature_drawn_lines
    schema: public
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - project_extent_id
          - source_layer
          - component_id
          - id
          - geography
          - is_deleted
    - role: moped-editor
      permission:
        check: {}
        columns:
          - project_extent_id
          - source_layer
          - component_id
          - id
          - geography
          - is_deleted
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - project_extent_id
          - source_layer
          - component_id
          - id
          - geography
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - project_extent_id
          - source_layer
          - component_id
          - id
          - geography
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - project_extent_id
          - source_layer
          - component_id
          - id
          - geography
          - is_deleted
        filter: {}
        allow_aggregations: true
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - project_extent_id
          - source_layer
          - component_id
          - id
          - geography
          - is_deleted
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - project_extent_id
          - source_layer
          - component_id
          - id
          - geography
          - is_deleted
        filter: {}
        check: {}
  delete_permissions:
    - role: moped-admin
      permission:
        filter: {}
    - role: moped-editor
      permission:
        filter: {}
  event_triggers:
    - name: activity_log_feature_drawn_lines
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!) { insert_moped_activity_log_one(object: $object) { activity_id } }",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_data": {"event": {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                }
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: feature_drawn_points
    schema: public
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - project_extent_id
          - source_layer
          - component_id
          - id
          - geography
          - is_deleted
    - role: moped-editor
      permission:
        check: {}
        columns:
          - project_extent_id
          - source_layer
          - component_id
          - id
          - geography
          - is_deleted
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - project_extent_id
          - source_layer
          - component_id
          - id
          - geography
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - project_extent_id
          - source_layer
          - component_id
          - id
          - geography
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - project_extent_id
          - source_layer
          - component_id
          - id
          - geography
          - is_deleted
        filter: {}
        allow_aggregations: true
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - project_extent_id
          - source_layer
          - component_id
          - id
          - geography
          - is_deleted
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - project_extent_id
          - source_layer
          - component_id
          - id
          - geography
          - is_deleted
        filter: {}
        check: {}
  delete_permissions:
    - role: moped-admin
      permission:
        filter: {}
    - role: moped-editor
      permission:
        filter: {}
  event_triggers:
    - name: activity_log_feature_drawn_points
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!) { insert_moped_activity_log_one(object: $object) { activity_id } }",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_data": {"event": {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                }
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: feature_intersections
    schema: public
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - source_layer
          - component_id
          - id
          - intersection_id
          - geography
          - is_deleted
    - role: moped-editor
      permission:
        check: {}
        columns:
          - source_layer
          - component_id
          - id
          - intersection_id
          - geography
          - is_deleted
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - source_layer
          - component_id
          - id
          - intersection_id
          - geography
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - source_layer
          - component_id
          - id
          - intersection_id
          - geography
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - source_layer
          - component_id
          - id
          - intersection_id
          - geography
          - is_deleted
        filter: {}
        allow_aggregations: true
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - source_layer
          - component_id
          - id
          - intersection_id
          - geography
          - is_deleted
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - source_layer
          - component_id
          - id
          - intersection_id
          - geography
          - is_deleted
        filter: {}
        check: {}
  delete_permissions:
    - role: moped-admin
      permission:
        filter: {}
    - role: moped-editor
      permission:
        filter: {}
  event_triggers:
    - name: activity_log_feature_intersections
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!) { insert_moped_activity_log_one(object: $object) { activity_id } }",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_data": {"event": {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                }
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: feature_layers
    schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - internal_table
          - reference_layer_primary_key_column
          - id
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - internal_table
          - reference_layer_primary_key_column
          - id
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - internal_table
          - reference_layer_primary_key_column
          - id
        filter: {}
        allow_aggregations: true
- table:
    name: feature_signals
    schema: public
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - knack_id
          - location_name
          - signal_type
          - component_id
          - id
          - signal_id
          - geography
          - is_deleted
    - role: moped-editor
      permission:
        check: {}
        columns:
          - knack_id
          - location_name
          - signal_type
          - component_id
          - id
          - signal_id
          - geography
          - is_deleted
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - knack_id
          - location_name
          - signal_type
          - component_id
          - id
          - signal_id
          - geography
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - knack_id
          - location_name
          - signal_type
          - component_id
          - id
          - signal_id
          - geography
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - knack_id
          - location_name
          - signal_type
          - component_id
          - id
          - signal_id
          - geography
          - is_deleted
        filter: {}
        allow_aggregations: true
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - knack_id
          - location_name
          - signal_type
          - component_id
          - id
          - signal_id
          - geography
          - is_deleted
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - knack_id
          - location_name
          - signal_type
          - component_id
          - id
          - signal_id
          - geography
          - is_deleted
        filter: {}
        check: {}
  delete_permissions:
    - role: moped-admin
      permission:
        filter: {}
    - role: moped-editor
      permission:
        filter: {}
  event_triggers:
    - name: activity_log_feature_signals
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!) { insert_moped_activity_log_one(object: $object) { activity_id } }",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_data": {"event": {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                }
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: feature_street_segments
    schema: public
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - full_street_name
          - line_type
          - source_layer
          - component_id
          - ctn_segment_id
          - from_address_min
          - id
          - symbol
          - to_address_max
          - geography
          - is_deleted
    - role: moped-editor
      permission:
        check: {}
        columns:
          - full_street_name
          - line_type
          - source_layer
          - component_id
          - ctn_segment_id
          - from_address_min
          - id
          - symbol
          - to_address_max
          - geography
          - is_deleted
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - full_street_name
          - line_type
          - source_layer
          - component_id
          - ctn_segment_id
          - from_address_min
          - id
          - symbol
          - to_address_max
          - geography
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - full_street_name
          - line_type
          - source_layer
          - component_id
          - ctn_segment_id
          - from_address_min
          - id
          - symbol
          - to_address_max
          - geography
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - full_street_name
          - line_type
          - source_layer
          - component_id
          - ctn_segment_id
          - from_address_min
          - id
          - symbol
          - to_address_max
          - geography
          - is_deleted
        filter: {}
        allow_aggregations: true
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - full_street_name
          - line_type
          - source_layer
          - component_id
          - ctn_segment_id
          - from_address_min
          - id
          - symbol
          - to_address_max
          - geography
          - is_deleted
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - full_street_name
          - line_type
          - source_layer
          - component_id
          - ctn_segment_id
          - from_address_min
          - id
          - symbol
          - to_address_max
          - geography
          - is_deleted
        filter: {}
        check: {}
  delete_permissions:
    - role: moped-admin
      permission:
        filter: {}
    - role: moped-editor
      permission:
        filter: {}
  event_triggers:
    - name: activity_log_feature_street_segments
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!) { insert_moped_activity_log_one(object: $object) { activity_id } }",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_data": {"event": {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                }
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: features
    schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - component_id
          - id
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - component_id
          - id
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - component_id
          - id
          - is_deleted
        filter: {}
        allow_aggregations: true
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - is_deleted
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - is_deleted
        filter: {}
        check: {}
- table:
    name: features_council_districts
    schema: public
- table:
    name: layer_council_district
    schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - council_district
          - id
          - geography
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - council_district
          - id
          - geography
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - council_district
          - id
          - geography
        filter: {}
- table:
    name: moped_activity_log
    schema: public
  object_relationships:
    - name: moped_user
      using:
        manual_configuration:
          column_mapping:
            updated_by: cognito_user_id
          insertion_order: null
          remote_table:
            name: moped_users
            schema: public
    - name: updated_by_user
      using:
        foreign_key_constraint_on: updated_by_user_id
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - activity_id
          - created_at
          - description
          - operation_type
          - record_data
          - record_id
          - record_project_id
          - record_type
          - updated_by
          - updated_by_user_id
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - activity_id
          - created_at
          - description
          - operation_type
          - record_data
          - record_id
          - record_project_id
          - record_type
          - updated_by
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - activity_id
          - created_at
          - description
          - operation_type
          - record_data
          - record_id
          - record_project_id
          - record_type
          - updated_by
        filter: {}
        allow_aggregations: true
- table:
    name: moped_component_tags
    schema: public
  array_relationships:
    - name: moped_proj_component_tags
      using:
        foreign_key_constraint_on:
          column: component_tag_id
          table:
            name: moped_proj_component_tags
            schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - is_deleted
          - id
          - name
          - slug
          - type
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - is_deleted
          - id
          - name
          - slug
          - type
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - is_deleted
          - id
          - name
          - slug
          - type
        filter: {}
- table:
    name: moped_component_work_types
    schema: public
  object_relationships:
    - name: moped_component
      using:
        foreign_key_constraint_on: component_id
    - name: moped_work_type
      using:
        foreign_key_constraint_on: work_type_id
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - component_id
          - id
          - work_type_id
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - component_id
          - id
          - work_type_id
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - component_id
          - id
          - work_type_id
        filter: {}
- table:
    name: moped_components
    schema: public
  object_relationships:
    - name: asset_feature_layer
      using:
        foreign_key_constraint_on: asset_feature_layer_id
    - name: feature_layer
      using:
        foreign_key_constraint_on: feature_layer_id
  array_relationships:
    - name: moped_component_work_types
      using:
        foreign_key_constraint_on:
          column: component_id
          table:
            name: moped_component_work_types
            schema: public
    - name: moped_components_subcomponents
      using:
        foreign_key_constraint_on:
          column: component_id
          table:
            name: moped_components_subcomponents
            schema: public
    - name: moped_proj_components
      using:
        foreign_key_constraint_on:
          column: component_id
          table:
            name: moped_proj_components
            schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - component_id
          - component_name
          - is_deleted
          - component_subtype
          - line_representation
          - feature_layer_id
          - asset_feature_layer_id
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - component_id
          - component_name
          - is_deleted
          - component_subtype
          - line_representation
          - feature_layer_id
          - asset_feature_layer_id
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - component_id
          - component_name
          - is_deleted
          - component_subtype
          - line_representation
          - feature_layer_id
          - asset_feature_layer_id
        filter: {}
- table:
    name: moped_components_subcomponents
    schema: public
  object_relationships:
    - name: moped_component
      using:
        foreign_key_constraint_on: component_id
    - name: moped_subcomponent
      using:
        foreign_key_constraint_on: subcomponent_id
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - component_id
          - id
          - subcomponent_id
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - component_id
          - id
          - subcomponent_id
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - component_id
          - id
          - subcomponent_id
        filter: {}
- table:
    name: moped_department
    schema: public
- table:
    name: moped_entity
    schema: public
  array_relationships:
    - name: entity_department
      using:
        manual_configuration:
          column_mapping:
            department_id: department_id
          insertion_order: null
          remote_table:
            name: moped_department
            schema: public
    - name: entity_organization
      using:
        manual_configuration:
          column_mapping:
            organization_id: organization_id
          insertion_order: null
          remote_table:
            name: moped_organization
            schema: public
    - name: entity_workgroup
      using:
        manual_configuration:
          column_mapping:
            workgroup_id: workgroup_id
          insertion_order: null
          remote_table:
            name: moped_workgroup
            schema: public
    - name: mopedProjectsByProjectSponsor
      using:
        foreign_key_constraint_on:
          column: project_sponsor
          table:
            name: moped_project
            schema: public
    - name: moped_proj_partners
      using:
        foreign_key_constraint_on:
          column: entity_id
          table:
            name: moped_proj_partners
            schema: public
    - name: moped_projects
      using:
        foreign_key_constraint_on:
          column: project_lead_id
          table:
            name: moped_project
            schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - department_id
          - entity_id
          - organization_id
          - workgroup_id
          - entity_name
          - date_added
          - entity_uuid
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - department_id
          - entity_id
          - organization_id
          - workgroup_id
          - entity_name
          - date_added
          - entity_uuid
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - department_id
          - entity_id
          - organization_id
          - workgroup_id
          - entity_name
          - date_added
          - entity_uuid
        filter: {}
        allow_aggregations: true
- table:
    name: moped_fund_programs
    schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - funding_program_id
          - funding_program_name
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - funding_program_id
          - funding_program_name
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - funding_program_id
          - funding_program_name
          - is_deleted
        filter: {}
        allow_aggregations: true
- table:
    name: moped_fund_sources
    schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - funding_source_id
          - funding_source_name
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - funding_source_id
          - funding_source_name
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - funding_source_id
          - funding_source_name
          - is_deleted
        filter: {}
        allow_aggregations: true
- table:
    name: moped_fund_status
    schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - funding_status_id
          - funding_status_name
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - funding_status_id
          - funding_status_name
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - funding_status_id
          - funding_status_name
        filter: {}
- table:
    name: moped_funds
    schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - id
          - fund_id
          - fund_name
          - is_deleted
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - id
          - fund_id
          - fund_name
          - is_deleted
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - id
          - fund_id
          - fund_name
          - is_deleted
        filter: {}
- table:
    name: moped_milestones
    schema: public
  object_relationships:
    - name: moped_phase
      using:
        foreign_key_constraint_on: related_phase_id
  array_relationships:
    - name: moped_proj_milestones
      using:
        foreign_key_constraint_on:
          column: milestone_id
          table:
            name: moped_proj_milestones
            schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - milestone_id
          - related_phase_id
          - milestone_description
          - milestone_name
          - is_deleted
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - milestone_id
          - related_phase_id
          - milestone_description
          - milestone_name
          - is_deleted
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - milestone_id
          - related_phase_id
          - milestone_description
          - milestone_name
          - is_deleted
        filter: {}
- table:
    name: moped_organization
    schema: public
- table:
    name: moped_phases
    schema: public
  array_relationships:
    - name: moped_subphases
      using:
        foreign_key_constraint_on:
          column: related_phase_id
          table:
            name: moped_subphases
            schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - required_phase
          - phase_average_length
          - phase_id
          - phase_order
          - phase_description
          - phase_name
          - phase_key
          - phase_name_simple
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - required_phase
          - phase_average_length
          - phase_id
          - phase_order
          - phase_description
          - phase_name
          - phase_key
          - phase_name_simple
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - required_phase
          - phase_average_length
          - phase_id
          - phase_order
          - phase_description
          - phase_name
          - phase_key
          - phase_name_simple
        filter: {}
- table:
    name: moped_proj_component_tags
    schema: public
  object_relationships:
    - name: moped_component_tag
      using:
        foreign_key_constraint_on: component_tag_id
    - name: moped_proj_component
      using:
        foreign_key_constraint_on: project_component_id
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - component_tag_id
          - is_deleted
          - project_component_id
    - role: moped-editor
      permission:
        check: {}
        columns:
          - component_tag_id
          - is_deleted
          - project_component_id
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - is_deleted
          - component_tag_id
          - id
          - project_component_id
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - is_deleted
          - component_tag_id
          - id
          - project_component_id
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - is_deleted
          - component_tag_id
          - id
          - project_component_id
        filter: {}
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - component_tag_id
          - is_deleted
          - project_component_id
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - component_tag_id
          - is_deleted
          - project_component_id
        filter: {}
        check: {}
  event_triggers:
    - name: activity_log_proj_component_tags
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!) { insert_moped_activity_log_one(object: $object) { activity_id } }",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_data": {"event": {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                }
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: moped_proj_component_work_types
    schema: public
  object_relationships:
    - name: moped_proj_component
      using:
        foreign_key_constraint_on: project_component_id
    - name: moped_work_type
      using:
        foreign_key_constraint_on: work_type_id
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - is_deleted
          - project_component_id
          - work_type_id
    - role: moped-editor
      permission:
        check: {}
        columns:
          - is_deleted
          - project_component_id
          - work_type_id
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - id
          - project_component_id
          - work_type_id
          - is_deleted
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - id
          - project_component_id
          - work_type_id
          - is_deleted
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - id
          - project_component_id
          - work_type_id
          - is_deleted
        filter: {}
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - is_deleted
          - project_component_id
          - work_type_id
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - is_deleted
          - project_component_id
          - work_type_id
        filter: {}
        check: {}
  event_triggers:
    - name: activity_log_proj_component_work_types
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!) { insert_moped_activity_log_one(object: $object) { activity_id } }",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_data": {"event": {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                }
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: moped_proj_components
    schema: public
  object_relationships:
    - name: moped_components
      using:
        foreign_key_constraint_on: component_id
    - name: moped_phase
      using:
        foreign_key_constraint_on: phase_id
    - name: moped_subphase
      using:
        foreign_key_constraint_on: subphase_id
  array_relationships:
    - name: feature_drawn_lines
      using:
        manual_configuration:
          column_mapping:
            project_component_id: component_id
          insertion_order: null
          remote_table:
            name: feature_drawn_lines
            schema: public
    - name: feature_drawn_points
      using:
        manual_configuration:
          column_mapping:
            project_component_id: component_id
          insertion_order: null
          remote_table:
            name: feature_drawn_points
            schema: public
    - name: feature_intersections
      using:
        manual_configuration:
          column_mapping:
            project_component_id: component_id
          insertion_order: null
          remote_table:
            name: feature_intersections
            schema: public
    - name: feature_signals
      using:
        manual_configuration:
          column_mapping:
            project_component_id: component_id
          insertion_order: null
          remote_table:
            name: feature_signals
            schema: public
    - name: feature_street_segments
      using:
        manual_configuration:
          column_mapping:
            project_component_id: component_id
          insertion_order: null
          remote_table:
            name: feature_street_segments
            schema: public
    - name: moped_proj_component_tags
      using:
        foreign_key_constraint_on:
          column: project_component_id
          table:
            name: moped_proj_component_tags
            schema: public
    - name: moped_proj_component_work_types
      using:
        foreign_key_constraint_on:
          column: project_component_id
          table:
            name: moped_proj_component_work_types
            schema: public
    - name: moped_proj_components_subcomponents
      using:
        foreign_key_constraint_on:
          column: project_component_id
          table:
            name: moped_proj_components_subcomponents
            schema: public
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - completion_date
          - component_id
          - date_added
          - description
          - interim_project_component_id
          - is_deleted
          - location_description
          - phase_id
          - project_component_id
          - project_id
          - subphase_id
          - srts_id
    - role: moped-editor
      permission:
        check: {}
        columns:
          - completion_date
          - component_id
          - date_added
          - description
          - interim_project_component_id
          - is_deleted
          - location_description
          - phase_id
          - project_component_id
          - project_id
          - subphase_id
          - srts_id
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - completion_date
          - component_id
          - date_added
          - description
          - interim_project_component_id
          - is_deleted
          - location_description
          - phase_id
          - project_component_id
          - project_id
          - subphase_id
          - srts_id
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - completion_date
          - component_id
          - date_added
          - description
          - interim_project_component_id
          - is_deleted
          - location_description
          - phase_id
          - project_component_id
          - project_id
          - subphase_id
          - srts_id
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - completion_date
          - component_id
          - date_added
          - description
          - interim_project_component_id
          - is_deleted
          - location_description
          - phase_id
          - project_component_id
          - project_id
          - subphase_id
          - srts_id
        filter: {}
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - completion_date
          - component_id
          - date_added
          - description
          - interim_project_component_id
          - is_deleted
          - location_description
          - phase_id
          - project_component_id
          - project_id
          - subphase_id
          - srts_id
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - completion_date
          - component_id
          - date_added
          - description
          - interim_project_component_id
          - is_deleted
          - location_description
          - phase_id
          - project_component_id
          - project_id
          - subphase_id
          - srts_id
        filter: {}
        check: {}
  event_triggers:
    - name: activity_log_moped_proj_components
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!, $project_id:Int!, $updated_at:timestamptz ) { insert_moped_activity_log_one(object: $object) { activity_id } update_moped_project_by_pk(pk_columns: {project_id: $project_id}, _set: {updated_at: $updated_at}) { updated_at }}",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.project_component_id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_project_id": {{ $body.event.data.new.project_id }},
                  "record_data": {"event": {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                },
                "updated_at": {{$body.created_at}},
                "project_id": {{$body.event.data.new.project_id}}
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
    - name: activity_log_moped_proj_components_update
      definition:
        enable_manual: false
        update:
          columns:
            - project_id
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!, $project_id:Int!, $updated_at:timestamptz ) { insert_moped_activity_log_one(object: $object) { activity_id } update_moped_project_by_pk(pk_columns: {project_id: $project_id}, _set: {updated_at: $updated_at}) { updated_at }}",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.project_component_id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_project_id": {{ $body.event.data.old.project_id }},
                  "record_data": {"event": {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                },
                "updated_at": {{$body.created_at}},
                "project_id": {{$body.event.data.old.project_id}}
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: moped_proj_components_subcomponents
    schema: public
  object_relationships:
    - name: moped_subcomponent
      using:
        foreign_key_constraint_on: subcomponent_id
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - component_subcomponent_id
          - is_deleted
          - project_component_id
          - subcomponent_id
    - role: moped-editor
      permission:
        check: {}
        columns:
          - component_subcomponent_id
          - is_deleted
          - project_component_id
          - subcomponent_id
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - component_subcomponent_id
          - is_deleted
          - project_component_id
          - subcomponent_id
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - component_subcomponent_id
          - is_deleted
          - project_component_id
          - subcomponent_id
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - component_subcomponent_id
          - is_deleted
          - project_component_id
          - subcomponent_id
        filter: {}
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - component_subcomponent_id
          - is_deleted
          - project_component_id
          - subcomponent_id
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - component_subcomponent_id
          - is_deleted
          - project_component_id
          - subcomponent_id
        filter: {}
        check: {}
- table:
    name: moped_proj_entities
    schema: public
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - project_sponsors
          - project_groups
          - partners
          - workgroups
          - project_personnel
          - entity_list_id
          - project_id
          - date_added
    - role: moped-editor
      permission:
        check: {}
        columns:
          - project_sponsors
          - project_groups
          - partners
          - workgroups
          - project_personnel
          - entity_list_id
          - project_id
          - date_added
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - partners
          - project_personnel
          - project_sponsors
          - project_groups
          - entity_list_id
          - project_id
          - workgroups
          - date_added
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - partners
          - project_personnel
          - project_sponsors
          - project_groups
          - entity_list_id
          - project_id
          - workgroups
          - date_added
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - project_sponsors
          - project_groups
          - partners
          - workgroups
          - project_personnel
          - entity_list_id
          - project_id
          - date_added
        filter: {}
        allow_aggregations: true
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - partners
          - project_personnel
          - project_sponsors
          - project_groups
          - entity_list_id
          - project_id
          - workgroups
          - date_added
        filter: {}
        check: null
    - role: moped-editor
      permission:
        columns:
          - partners
          - project_personnel
          - project_sponsors
          - project_groups
          - entity_list_id
          - project_id
          - workgroups
          - date_added
        filter: {}
        check: null
- table:
    name: moped_proj_funding
    schema: public
  object_relationships:
    - name: moped_fund_source
      using:
        foreign_key_constraint_on: funding_source_id
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - proj_funding_id
          - project_id
          - date_added
          - added_by
          - funding_source_id
          - funding_program_id
          - funding_amount
          - funding_description
          - funding_status_id
          - fund
          - dept_unit
          - is_deleted
    - role: moped-editor
      permission:
        check: {}
        columns:
          - added_by
          - funding_amount
          - funding_program_id
          - funding_source_id
          - funding_status_id
          - project_id
          - proj_funding_id
          - dept_unit
          - fund
          - funding_description
          - date_added
          - is_deleted
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - added_by
          - funding_amount
          - funding_program_id
          - funding_source_id
          - funding_status_id
          - project_id
          - proj_funding_id
          - dept_unit
          - fund
          - funding_description
          - date_added
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - added_by
          - funding_amount
          - funding_program_id
          - funding_source_id
          - funding_status_id
          - project_id
          - proj_funding_id
          - dept_unit
          - fund
          - funding_description
          - date_added
          - is_deleted
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - added_by
          - funding_amount
          - funding_program_id
          - funding_source_id
          - funding_status_id
          - project_id
          - proj_funding_id
          - dept_unit
          - fund
          - funding_description
          - date_added
          - is_deleted
        filter: {}
        allow_aggregations: true
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - added_by
          - funding_amount
          - funding_program_id
          - funding_source_id
          - funding_status_id
          - project_id
          - proj_funding_id
          - dept_unit
          - fund
          - funding_description
          - date_added
          - is_deleted
        filter: {}
        check: null
    - role: moped-editor
      permission:
        columns:
          - added_by
          - funding_amount
          - funding_program_id
          - funding_source_id
          - funding_status_id
          - project_id
          - proj_funding_id
          - dept_unit
          - fund
          - funding_description
          - date_added
          - is_deleted
        filter: {}
        check: null
  event_triggers:
    - name: activity_log_moped_proj_funding
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
                            "query": "mutation InsertActivity($object: moped_activity_log_insert_input!, $project_id:Int!, $updated_at:timestamptz ) { insert_moped_activity_log_one(object: $object) { activity_id } update_moped_project_by_pk(pk_columns: {project_id: $project_id}, _set: {updated_at: $updated_at}) { updated_at }}",
                            "variables": {
                                "object": {
                                    "record_id": {{ $body.event.data.new.proj_funding_id }},
                                    "record_type":  {{ $body.table.name }},
                                    "activity_id": {{ $body.id }},
                                    "record_project_id": {{ $body.event.data.new.project_id }},
                                    "record_data": {"event": {{ $body.event }}},
                                    "description": [{"newSchema": "true"}],
                                    "operation_type": {{ $body.event.op }},
                                    "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                                },
                                "updated_at": {{$body.created_at}},
                                "project_id": {{$body.event.data.new.project_id}}
                            }
                        }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: moped_proj_milestones
    schema: public
  object_relationships:
    - name: moped_milestone
      using:
        foreign_key_constraint_on: milestone_id
    - name: moped_project
      using:
        foreign_key_constraint_on: project_id
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - completed
          - date_added
          - milestone_id
          - description
          - date_actual
          - date_estimate
          - milestone_order
          - project_id
          - project_milestone_id
          - is_deleted
    - role: moped-editor
      permission:
        check: {}
        columns:
          - completed
          - date_added
          - milestone_id
          - description
          - date_actual
          - date_estimate
          - milestone_order
          - project_id
          - project_milestone_id
          - is_deleted
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - completed
          - date_added
          - milestone_id
          - description
          - date_actual
          - date_estimate
          - milestone_order
          - project_id
          - project_milestone_id
          - is_deleted
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - completed
          - date_added
          - milestone_id
          - description
          - date_actual
          - date_estimate
          - milestone_order
          - project_id
          - project_milestone_id
          - is_deleted
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - completed
          - date_added
          - milestone_id
          - description
          - date_actual
          - date_estimate
          - milestone_order
          - project_id
          - project_milestone_id
          - is_deleted
        filter: {}
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - completed
          - date_added
          - milestone_id
          - description
          - date_actual
          - date_estimate
          - milestone_order
          - project_id
          - project_milestone_id
          - is_deleted
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - completed
          - date_added
          - milestone_id
          - description
          - date_actual
          - date_estimate
          - milestone_order
          - project_id
          - project_milestone_id
          - is_deleted
        filter: {}
        check: {}
  event_triggers:
    - name: activity_log_moped_proj_milestones
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
                            "query": "mutation InsertActivity($object: moped_activity_log_insert_input!, $project_id:Int!, $updated_at:timestamptz ) { insert_moped_activity_log_one(object: $object) { activity_id } update_moped_project_by_pk(pk_columns: {project_id: $project_id}, _set: {updated_at: $updated_at}) { updated_at }}",
                            "variables": {
                                "object": {
                                    "record_id": {{ $body.event.data.new.project_milestone_id }},
                                    "record_type":  {{ $body.table.name }},
                                    "activity_id": {{ $body.id }},
                                    "record_project_id": {{ $body.event.data.new.project_id }},
                                    "record_data": {"event": {{ $body.event }}},
                                    "description": [{"newSchema": "true"}],
                                    "operation_type": {{ $body.event.op }},
                                    "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                                },
                                "updated_at": {{$body.created_at}},
                                "project_id": {{$body.event.data.new.project_id}}
                            }
                        }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: moped_proj_notes
    schema: public
  object_relationships:
    - name: moped_phase
      using:
        foreign_key_constraint_on: phase_id
    - name: moped_project
      using:
        foreign_key_constraint_on: project_id
    - name: moped_user
      using:
        foreign_key_constraint_on: added_by_user_id
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - added_by_user_id
          - date_created
          - is_deleted
          - phase_id
          - project_id
          - project_note
          - project_note_id
          - project_note_type
    - role: moped-editor
      permission:
        check: {}
        columns:
          - added_by_user_id
          - date_created
          - is_deleted
          - phase_id
          - project_id
          - project_note
          - project_note_id
          - project_note_type
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - added_by_user_id
          - date_created
          - is_deleted
          - phase_id
          - project_id
          - project_note
          - project_note_id
          - project_note_type
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - added_by_user_id
          - date_created
          - is_deleted
          - phase_id
          - project_id
          - project_note
          - project_note_id
          - project_note_type
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - added_by_user_id
          - date_created
          - is_deleted
          - phase_id
          - project_id
          - project_note
          - project_note_id
          - project_note_type
        filter: {}
        allow_aggregations: true
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - added_by_user_id
          - date_created
          - is_deleted
          - phase_id
          - project_id
          - project_note
          - project_note_id
          - project_note_type
        filter: {}
        check: null
    - role: moped-editor
      permission:
        columns:
          - added_by_user_id
          - date_created
          - is_deleted
          - phase_id
          - project_id
          - project_note
          - project_note_id
          - project_note_type
        filter: {}
        check: null
  event_triggers:
    - name: activity_log_moped_proj_notes
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!, $project_id:Int!, $updated_at:timestamptz ) { insert_moped_activity_log_one(object: $object) { activity_id } update_moped_project_by_pk(pk_columns: {project_id: $project_id}, _set: {updated_at: $updated_at}) { updated_at }}",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.project_note_id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_project_id": {{ $body.event.data.new.project_id }},
                  "record_data": {"event": {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                },
                "updated_at": {{$body.created_at}},
                "project_id": {{$body.event.data.new.project_id}}
              }
            }
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: moped_proj_partners
    schema: public
  object_relationships:
    - name: moped_entity
      using:
        foreign_key_constraint_on: entity_id
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - added_by
          - date_added
          - entity_id
          - is_deleted
          - proj_partner_id
          - project_id
    - role: moped-editor
      permission:
        check: {}
        columns:
          - added_by
          - date_added
          - entity_id
          - is_deleted
          - proj_partner_id
          - project_id
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - added_by
          - date_added
          - entity_id
          - is_deleted
          - proj_partner_id
          - project_id
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - added_by
          - date_added
          - entity_id
          - is_deleted
          - proj_partner_id
          - project_id
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - added_by
          - date_added
          - entity_id
          - is_deleted
          - proj_partner_id
          - project_id
        filter: {}
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - added_by
          - date_added
          - entity_id
          - is_deleted
          - proj_partner_id
          - project_id
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - added_by
          - date_added
          - entity_id
          - is_deleted
          - proj_partner_id
          - project_id
        filter: {}
        check: {}
  event_triggers:
    - name: activity_log_moped_proj_partners
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!, $project_id:Int!, $updated_at:timestamptz ) { insert_moped_activity_log_one(object: $object) { activity_id } update_moped_project_by_pk(pk_columns: {project_id: $project_id}, _set: {updated_at: $updated_at}) { updated_at }}",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.proj_partner_id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_project_id": {{ $body.event.data.new.project_id }},
                  "record_data": {"event": {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                },
                "updated_at": {{$body.created_at}},
                "project_id": {{$body.event.data.new.project_id}}
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: moped_proj_personnel
    schema: public
  object_relationships:
    - name: moped_user
      using:
        foreign_key_constraint_on: user_id
    - name: project
      using:
        foreign_key_constraint_on: project_id
  array_relationships:
    - name: moped_proj_personnel_roles
      using:
        foreign_key_constraint_on:
          column: project_personnel_id
          table:
            name: moped_proj_personnel_roles
            schema: public
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - added_by
          - date_added
          - is_deleted
          - notes
          - project_id
          - project_personnel_id
          - user_id
    - role: moped-editor
      permission:
        check: {}
        columns:
          - added_by
          - date_added
          - is_deleted
          - notes
          - project_id
          - project_personnel_id
          - user_id
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - added_by
          - date_added
          - is_deleted
          - notes
          - project_id
          - project_personnel_id
          - user_id
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - added_by
          - date_added
          - is_deleted
          - notes
          - project_id
          - project_personnel_id
          - user_id
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - added_by
          - date_added
          - is_deleted
          - notes
          - project_id
          - project_personnel_id
          - user_id
        filter: {}
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - added_by
          - date_added
          - is_deleted
          - notes
          - project_id
          - project_personnel_id
          - user_id
        filter: {}
        check: null
    - role: moped-editor
      permission:
        columns:
          - added_by
          - date_added
          - is_deleted
          - notes
          - project_id
          - project_personnel_id
          - user_id
        filter: {}
        check: null
  event_triggers:
    - name: activity_log_moped_proj_personnel
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
                            "query": "mutation InsertActivity($object: moped_activity_log_insert_input!, $project_id:Int!, $updated_at:timestamptz ) { insert_moped_activity_log_one(object: $object) { activity_id } update_moped_project_by_pk(pk_columns: {project_id: $project_id}, _set: {updated_at: $updated_at}) { updated_at }}",
                            "variables": {
                                "object": {
                                    "record_id": {{ $body.event.data.new.project_personnel_id }},
                                    "record_type":  {{ $body.table.name }},
                                    "activity_id": {{ $body.id }},
                                    "record_project_id": {{ $body.event.data.new.project_id }},
                                    "record_data": { "event": {{ $body.event }}},
                                    "description": [{"newSchema": "true"}],
                                    "operation_type": {{ $body.event.op }},
                                    "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                                },
                                "updated_at": {{$body.created_at}},
                                "project_id": {{$body.event.data.new.project_id}}
                            }
                        }
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: moped_proj_personnel_roles
    schema: public
  object_relationships:
    - name: moped_proj_personnel
      using:
        foreign_key_constraint_on: project_personnel_id
    - name: moped_project_role
      using:
        foreign_key_constraint_on: project_role_id
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - is_deleted
          - project_personnel_id
          - project_role_id
    - role: moped-editor
      permission:
        check: {}
        columns:
          - is_deleted
          - project_personnel_id
          - project_role_id
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - is_deleted
          - id
          - project_personnel_id
          - project_role_id
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - is_deleted
          - id
          - project_personnel_id
          - project_role_id
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - is_deleted
          - id
          - project_personnel_id
          - project_role_id
        filter: {}
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - is_deleted
          - project_personnel_id
          - project_role_id
        filter: {}
        check: null
    - role: moped-editor
      permission:
        columns:
          - is_deleted
          - project_personnel_id
          - project_role_id
        filter: {}
        check: null
  event_triggers:
    - name: activity_log_moped_proj_personnel_roles
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
                            "query": "mutation InsertActivity($object: moped_activity_log_insert_input!) { insert_moped_activity_log_one(object: $object) { activity_id } }",
                            "variables": {
                                "object": {
                                    "record_id": {{ $body.event.data.new.id }},
                                    "record_type":  {{ $body.table.name }},
                                    "activity_id": {{ $body.id }},
                                    "record_data": { "event": {{ $body.event }}},
                                    "record_project_id": null,
                                    "description": [{"newSchema": "true"}],
                                    "operation_type": {{ $body.event.op }},
                                    "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                                }
                            }
                        }
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: moped_proj_phases
    schema: public
  object_relationships:
    - name: moped_phase
      using:
        foreign_key_constraint_on: phase_id
    - name: moped_subphase
      using:
        foreign_key_constraint_on: subphase_id
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - date_added
          - is_current_phase
          - is_deleted
          - phase_description
          - phase_end
          - phase_id
          - phase_start
          - project_id
          - project_phase_id
          - subphase_id
          - is_phase_start_confirmed
          - is_phase_end_confirmed
    - role: moped-editor
      permission:
        check: {}
        columns:
          - date_added
          - is_current_phase
          - is_deleted
          - phase_description
          - phase_end
          - phase_id
          - phase_start
          - project_id
          - project_phase_id
          - subphase_id
          - is_phase_start_confirmed
          - is_phase_end_confirmed
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - date_added
          - is_current_phase
          - is_deleted
          - phase_description
          - phase_end
          - phase_id
          - phase_start
          - project_id
          - project_phase_id
          - subphase_id
          - is_phase_start_confirmed
          - is_phase_end_confirmed
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - date_added
          - is_current_phase
          - is_deleted
          - phase_description
          - phase_end
          - phase_id
          - phase_start
          - project_id
          - project_phase_id
          - subphase_id
          - is_phase_start_confirmed
          - is_phase_end_confirmed
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - date_added
          - is_current_phase
          - is_deleted
          - phase_description
          - phase_end
          - phase_id
          - phase_start
          - project_id
          - project_phase_id
          - subphase_id
          - is_phase_start_confirmed
          - is_phase_end_confirmed
        filter: {}
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - date_added
          - is_current_phase
          - is_deleted
          - phase_description
          - phase_end
          - phase_id
          - phase_start
          - project_id
          - project_phase_id
          - subphase_id
          - is_phase_start_confirmed
          - is_phase_end_confirmed
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - date_added
          - is_current_phase
          - is_deleted
          - phase_description
          - phase_end
          - phase_id
          - phase_start
          - project_id
          - project_phase_id
          - subphase_id
          - is_phase_start_confirmed
          - is_phase_end_confirmed
        filter: {}
        check: {}
  event_triggers:
    - name: activity_log_moped_proj_phases
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!, $project_id:Int!, $updated_at:timestamptz ) { insert_moped_activity_log_one(object: $object) { activity_id } update_moped_project_by_pk(pk_columns: {project_id: $project_id}, _set: {updated_at: $updated_at}) { updated_at }}",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.project_phase_id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_project_id": {{ $body.event.data.new.project_id }},
                  "record_data": {"event": {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                },
                "updated_at": {{$body.created_at}},
                "project_id": {{$body.event.data.new.project_id}}
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: moped_proj_tags
    schema: public
  object_relationships:
    - name: moped_project
      using:
        foreign_key_constraint_on: project_id
    - name: moped_tag
      using:
        foreign_key_constraint_on: tag_id
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - id
          - project_id
          - tag_id
          - is_deleted
    - role: moped-editor
      permission:
        check: {}
        columns:
          - id
          - project_id
          - tag_id
          - is_deleted
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - id
          - project_id
          - tag_id
          - is_deleted
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - id
          - project_id
          - tag_id
          - is_deleted
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - id
          - project_id
          - tag_id
          - is_deleted
        filter: {}
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - id
          - project_id
          - tag_id
          - is_deleted
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - id
          - project_id
          - tag_id
          - is_deleted
        filter: {}
        check: {}
  event_triggers:
    - name: activity_log_moped_project_tags
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns:
            - id
            - project_id
            - tag_id
            - is_deleted
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!, $project_id:Int!, $updated_at:timestamptz ) { insert_moped_activity_log_one(object: $object) { activity_id } update_moped_project_by_pk(pk_columns: {project_id: $project_id}, _set: {updated_at: $updated_at}) { updated_at }}",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_project_id": {{ $body.event.data.new.project_id }},
                  "record_data": {"event" : {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                },
                  "updated_at": {{$body.created_at}},
                  "project_id": {{$body.event.data.new.project_id}}
            }
                                    }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: moped_proj_work_activity
    schema: public
  object_relationships:
    - name: created_by_user
      using:
        foreign_key_constraint_on: created_by_user_id
    - name: moped_project
      using:
        foreign_key_constraint_on: project_id
    - name: moped_work_activity_status
      using:
        foreign_key_constraint_on: status_id
    - name: updated_by_user
      using:
        foreign_key_constraint_on: updated_by_user_id
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        set:
          created_by_user_id: x-hasura-user-db-id
          updated_by_user_id: x-hasura-user-db-id
        columns:
          - contractor
          - contract_number
          - description
          - project_id
          - is_deleted
          - work_assignment_id
          - contract_amount
          - interim_work_activity_id
          - implementation_workgroup
          - task_orders
          - status_id
          - status_note
          - work_order_url
    - role: moped-editor
      permission:
        check: {}
        set:
          created_by_user_id: x-hasura-user-db-id
          updated_by_user_id: x-hasura-user-db-id
        columns:
          - contractor
          - contract_number
          - description
          - project_id
          - is_deleted
          - work_assignment_id
          - contract_amount
          - interim_work_activity_id
          - implementation_workgroup
          - task_orders
          - status_id
          - status_note
          - work_order_url
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - contract_amount
          - contract_number
          - contractor
          - created_at
          - created_by_user_id
          - description
          - id
          - implementation_workgroup
          - interim_work_activity_id
          - is_deleted
          - project_id
          - status_id
          - status_note
          - task_orders
          - updated_at
          - updated_by_user_id
          - work_assignment_id
          - work_order_url
          - reference_id
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - is_deleted
          - contract_amount
          - created_by_user_id
          - id
          - project_id
          - status_id
          - updated_by_user_id
          - task_orders
          - contract_number
          - contractor
          - description
          - implementation_workgroup
          - interim_work_activity_id
          - status_note
          - work_assignment_id
          - created_at
          - updated_at
          - work_order_url
          - reference_id
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - is_deleted
          - contract_amount
          - created_by_user_id
          - id
          - project_id
          - status_id
          - updated_by_user_id
          - task_orders
          - contract_number
          - contractor
          - description
          - implementation_workgroup
          - interim_work_activity_id
          - status_note
          - work_assignment_id
          - created_at
          - updated_at
          - work_order_url
          - reference_id
        filter: {}
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - contractor
          - contract_number
          - description
          - project_id
          - is_deleted
          - work_assignment_id
          - contract_amount
          - interim_work_activity_id
          - implementation_workgroup
          - task_orders
          - status_id
          - status_note
          - work_order_url
        filter: {}
        check: {}
        set:
          updated_by_user_id: x-hasura-user-db-id
    - role: moped-editor
      permission:
        columns:
          - contractor
          - contract_number
          - description
          - project_id
          - is_deleted
          - work_assignment_id
          - contract_amount
          - interim_work_activity_id
          - implementation_workgroup
          - task_orders
          - status_id
          - status_note
          - work_order_url
        filter: {}
        check: {}
        set:
          updated_by_user_id: x-hasura-user-db-id
  event_triggers:
    - name: activity_log_moped_proj_work_activity
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!, $project_id:Int!, $updated_at:timestamptz ) { insert_moped_activity_log_one(object: $object) { activity_id } update_moped_project_by_pk(pk_columns: {project_id: $project_id}, _set: {updated_at: $updated_at}) { updated_at }}",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_project_id": {{ $body.event.data.new.project_id }},
                  "record_data": {"event": {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                },
                "updated_at": {{$body.created_at}},
                "project_id": {{$body.event.data.new.project_id}}
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: moped_proj_work_activity_status
    schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - id
          - key
          - name
          - is_deleted
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - id
          - key
          - name
          - is_deleted
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - id
          - key
          - name
          - is_deleted
        filter: {}
- table:
    name: moped_project
    schema: public
  object_relationships:
    - name: current_phase_view
      using:
        manual_configuration:
          column_mapping:
            project_id: project_id
          insertion_order: null
          remote_table:
            name: current_phase_view
            schema: public
    - name: moped_entity
      using:
        foreign_key_constraint_on: project_sponsor
    - name: moped_project
      using:
        foreign_key_constraint_on: parent_project_id
    - name: moped_project_lead
      using:
        foreign_key_constraint_on: project_lead_id
    - name: moped_public_process_statuses
      using:
        foreign_key_constraint_on: public_process_status_id
    - name: moped_user
      using:
        foreign_key_constraint_on: added_by
  array_relationships:
    - name: geography
      using:
        manual_configuration:
          column_mapping:
            project_id: project_id
          insertion_order: null
          remote_table:
            name: project_geography
            schema: public
    - name: moped_proj_components
      using:
        foreign_key_constraint_on:
          column: project_id
          table:
            name: moped_proj_components
            schema: public
    - name: moped_proj_funding
      using:
        foreign_key_constraint_on:
          column: project_id
          table:
            name: moped_proj_funding
            schema: public
    - name: moped_proj_milestones
      using:
        foreign_key_constraint_on:
          column: project_id
          table:
            name: moped_proj_milestones
            schema: public
    - name: moped_proj_notes
      using:
        foreign_key_constraint_on:
          column: project_id
          table:
            name: moped_proj_notes
            schema: public
    - name: moped_proj_partners
      using:
        foreign_key_constraint_on:
          column: project_id
          table:
            name: moped_proj_partners
            schema: public
    - name: moped_proj_personnel
      using:
        foreign_key_constraint_on:
          column: project_id
          table:
            name: moped_proj_personnel
            schema: public
    - name: moped_proj_phases
      using:
        foreign_key_constraint_on:
          column: project_id
          table:
            name: moped_proj_phases
            schema: public
    - name: moped_proj_tags
      using:
        foreign_key_constraint_on:
          column: project_id
          table:
            name: moped_proj_tags
            schema: public
    - name: moped_proj_work_activities
      using:
        foreign_key_constraint_on:
          column: project_id
          table:
            name: moped_proj_work_activity
            schema: public
    - name: moped_project_types
      using:
        foreign_key_constraint_on:
          column: project_id
          table:
            name: moped_project_types
            schema: public
    - name: moped_projects
      using:
        foreign_key_constraint_on:
          column: parent_project_id
          table:
            name: moped_project
            schema: public
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - added_by
          - interim_project_id
          - parent_project_id
          - project_id
          - project_lead_id
          - project_sponsor
          - ecapris_subproject_id
          - knack_project_id
          - project_description
          - project_name
          - project_website
          - date_added
          - updated_at
          - is_deleted
          - public_process_status_id
    - role: moped-editor
      permission:
        check: {}
        columns:
          - added_by
          - interim_project_id
          - parent_project_id
          - project_id
          - project_lead_id
          - project_sponsor
          - ecapris_subproject_id
          - knack_project_id
          - project_description
          - project_name
          - project_website
          - date_added
          - updated_at
          - is_deleted
          - public_process_status_id
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - added_by
          - interim_project_id
          - parent_project_id
          - project_id
          - project_lead_id
          - project_sponsor
          - ecapris_subproject_id
          - knack_project_id
          - project_description
          - project_name
          - project_website
          - date_added
          - updated_at
          - is_deleted
          - public_process_status_id
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - added_by
          - interim_project_id
          - parent_project_id
          - project_id
          - project_lead_id
          - project_sponsor
          - ecapris_subproject_id
          - knack_project_id
          - project_description
          - project_name
          - project_website
          - date_added
          - updated_at
          - is_deleted
          - public_process_status_id
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - added_by
          - interim_project_id
          - parent_project_id
          - project_id
          - project_lead_id
          - project_sponsor
          - ecapris_subproject_id
          - knack_project_id
          - project_description
          - project_name
          - project_website
          - date_added
          - updated_at
          - is_deleted
          - public_process_status_id
        filter: {}
        allow_aggregations: true
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - added_by
          - interim_project_id
          - parent_project_id
          - project_id
          - project_lead_id
          - project_sponsor
          - ecapris_subproject_id
          - knack_project_id
          - project_description
          - project_name
          - project_website
          - date_added
          - updated_at
          - is_deleted
          - public_process_status_id
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - added_by
          - interim_project_id
          - parent_project_id
          - project_id
          - project_lead_id
          - project_sponsor
          - ecapris_subproject_id
          - knack_project_id
          - project_description
          - project_name
          - project_website
          - date_added
          - updated_at
          - is_deleted
          - public_process_status_id
        filter: {}
        check: {}
  event_triggers:
    - name: activity_log_moped_project
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns:
            - ecapris_subproject_id
            - project_id
            - date_added
            - added_by
            - is_deleted
            - project_sponsor
            - parent_project_id
            - interim_project_id
            - project_lead_id
            - project_name
            - project_description
            - project_website
            - knack_project_id
            - public_process_status_id
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
                            "query": "mutation InsertActivity($object: moped_activity_log_insert_input!, $project_id:Int!, $updated_at:timestamptz ) { insert_moped_activity_log_one(object: $object) { activity_id } update_moped_project_by_pk(pk_columns: {project_id: $project_id}, _set: {updated_at: $updated_at}) { updated_at }}",
                            "variables": {
                                "object": {
                                    "record_id": {{ $body.event.data.new.project_id }},
                                    "record_type":  {{ $body.table.name }},
                                    "activity_id": {{ $body.id }},
                                    "record_project_id": {{ $body.event.data.new.project_id }},
                                    "record_data": { "event": {{ $body.event }}},
                                    "description": [{"newSchema": "true"}],
                                    "operation_type": {{ $body.event.op }},
                                    "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                                },
                                "updated_at": {{$body.created_at}},
                                "project_id": {{$body.event.data.new.project_id}}
                            }
                        }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: moped_project_files
    schema: public
  object_relationships:
    - name: moped_project
      using:
        foreign_key_constraint_on: project_id
    - name: moped_user
      using:
        foreign_key_constraint_on: created_by
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - is_deleted
          - is_scanned
          - created_by
          - file_size
          - file_type
          - project_file_id
          - project_id
          - api_response
          - file_metadata
          - file_permissions
          - file_description
          - file_key
          - file_name
          - create_date
          - file_url
    - role: moped-editor
      permission:
        check: {}
        columns:
          - is_deleted
          - is_scanned
          - created_by
          - file_size
          - file_type
          - project_file_id
          - project_id
          - api_response
          - file_metadata
          - file_permissions
          - file_description
          - file_key
          - file_name
          - create_date
          - file_url
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - api_response
          - create_date
          - created_by
          - file_description
          - file_key
          - file_metadata
          - file_name
          - file_permissions
          - file_size
          - file_type
          - is_deleted
          - is_scanned
          - project_file_id
          - project_id
          - file_url
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - is_deleted
          - is_scanned
          - created_by
          - file_size
          - file_type
          - project_file_id
          - project_id
          - api_response
          - file_metadata
          - file_permissions
          - file_description
          - file_key
          - file_name
          - create_date
          - file_url
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - is_deleted
          - is_scanned
          - created_by
          - file_size
          - file_type
          - project_file_id
          - project_id
          - api_response
          - file_metadata
          - file_permissions
          - file_description
          - file_key
          - file_name
          - create_date
          - file_url
        filter: {}
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - is_deleted
          - is_scanned
          - created_by
          - file_size
          - file_type
          - project_file_id
          - project_id
          - api_response
          - file_metadata
          - file_permissions
          - file_description
          - file_key
          - file_name
          - create_date
          - file_url
        filter: {}
        check: null
    - role: moped-editor
      permission:
        columns:
          - is_deleted
          - is_scanned
          - created_by
          - file_size
          - file_type
          - project_file_id
          - project_id
          - api_response
          - file_metadata
          - file_permissions
          - file_description
          - file_key
          - file_name
          - create_date
          - file_url
        filter: {}
        check: null
  event_triggers:
    - name: activity_log_moped_project_files
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!, $project_id:Int!, $updated_at:timestamptz ) { insert_moped_activity_log_one(object: $object) { activity_id } update_moped_project_by_pk(pk_columns: {project_id: $project_id}, _set: {updated_at: $updated_at}) { updated_at }}",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.project_file_id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_project_id": {{ $body.event.data.new.project_id }},
                  "record_data": {"event": {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                },
                "updated_at": {{$body.created_at}},
                "project_id": {{$body.event.data.new.project_id}}
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: moped_project_roles
    schema: public
  array_relationships:
    - name: moped_proj_personnel_roles
      using:
        foreign_key_constraint_on:
          column: project_role_id
          table:
            name: moped_proj_personnel_roles
            schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - active_role
          - date_added
          - project_role_description
          - project_role_id
          - project_role_name
          - role_order
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - active_role
          - date_added
          - project_role_description
          - project_role_id
          - project_role_name
          - role_order
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - active_role
          - date_added
          - project_role_description
          - project_role_id
          - project_role_name
          - role_order
        filter: {}
- table:
    name: moped_project_types
    schema: public
  object_relationships:
    - name: moped_type
      using:
        foreign_key_constraint_on: project_type_id
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - added_by
          - date_added
          - id
          - is_deleted
          - project_id
          - project_type_id
    - role: moped-editor
      permission:
        check: {}
        columns:
          - added_by
          - date_added
          - id
          - is_deleted
          - project_id
          - project_type_id
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - added_by
          - date_added
          - id
          - is_deleted
          - project_id
          - project_type_id
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - added_by
          - date_added
          - id
          - is_deleted
          - project_id
          - project_type_id
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - added_by
          - date_added
          - id
          - is_deleted
          - project_id
          - project_type_id
        filter: {}
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - added_by
          - date_added
          - id
          - is_deleted
          - project_id
          - project_type_id
        filter: {}
        check: null
    - role: moped-editor
      permission:
        columns:
          - added_by
          - date_added
          - id
          - is_deleted
          - project_id
          - project_type_id
        filter: {}
        check: null
  event_triggers:
    - name: activity_log_moped_project_types
      definition:
        enable_manual: false
        insert:
          columns: '*'
        update:
          columns: '*'
      retry_conf:
        interval_sec: 10
        num_retries: 0
        timeout_sec: 60
      webhook_from_env: HASURA_ENDPOINT
      headers:
        - name: x-hasura-admin-secret
          value_from_env: ACTIVITY_LOG_API_SECRET
      request_transform:
        body:
          action: transform
          template: |-
            {
              "query": "mutation InsertActivity($object: moped_activity_log_insert_input!, $project_id:Int!, $updated_at:timestamptz ) { insert_moped_activity_log_one(object: $object) { activity_id } update_moped_project_by_pk(pk_columns: {project_id: $project_id}, _set: {updated_at: $updated_at}) { updated_at }}",
              "variables": {
                "object": {
                  "record_id": {{ $body.event.data.new.id }},
                  "record_type":  {{ $body.table.name }},
                  "activity_id": {{ $body.id }},
                  "record_project_id": {{ $body.event.data.new.project_id }},
                  "record_data": {"event": {{ $body.event }}},
                  "description": [{"newSchema": "true"}],
                  "operation_type": {{ $body.event.op }},
                  "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
                },
                "updated_at": {{$body.created_at}},
                "project_id": {{$body.event.data.new.project_id}}
              }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      cleanup_config:
        batch_size: 10000
        clean_invocation_logs: false
        clear_older_than: 168
        paused: true
        schedule: 0 0 * * *
        timeout: 60
- table:
    name: moped_public_process_statuses
    schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - id
          - slug
          - name
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - id
          - slug
          - name
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - id
          - slug
          - name
        filter: {}
- table:
    name: moped_subcomponents
    schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - subcomponent_id
          - subcomponent_name
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - subcomponent_id
          - subcomponent_name
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - subcomponent_id
          - subcomponent_name
        filter: {}
- table:
    name: moped_subphases
    schema: public
  object_relationships:
    - name: moped_phase
      using:
        foreign_key_constraint_on: related_phase_id
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - related_phase_id
          - subphase_id
          - subphase_description
          - subphase_name
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - related_phase_id
          - subphase_id
          - subphase_description
          - subphase_name
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - related_phase_id
          - subphase_id
          - subphase_description
          - subphase_name
        filter: {}
- table:
    name: moped_tags
    schema: public
  array_relationships:
    - name: moped_proj_tags
      using:
        foreign_key_constraint_on:
          column: tag_id
          table:
            name: moped_proj_tags
            schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - id
          - name
          - type
          - slug
          - is_deleted
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - id
          - name
          - type
          - slug
          - is_deleted
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - id
          - name
          - type
          - slug
          - is_deleted
        filter: {}
- table:
    name: moped_types
    schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - type_name
          - type_id
          - active_type
          - on_street
          - sensitivity
          - type_order
          - date_added
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - type_name
          - type_id
          - active_type
          - on_street
          - sensitivity
          - type_order
          - date_added
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - type_name
          - type_id
          - active_type
          - on_street
          - sensitivity
          - type_order
          - date_added
        filter: {}
- table:
    name: moped_user_followed_projects
    schema: public
  object_relationships:
    - name: project
      using:
        foreign_key_constraint_on: project_id
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - created_at
          - project_id
          - user_id
          - id
    - role: moped-editor
      permission:
        check: {}
        columns:
          - id
          - project_id
          - user_id
          - created_at
    - role: moped-viewer
      permission:
        check: {}
        columns:
          - id
          - project_id
          - user_id
          - created_at
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - id
          - project_id
          - user_id
          - created_at
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - id
          - project_id
          - user_id
          - created_at
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - id
          - project_id
          - user_id
          - created_at
        filter: {}
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - id
          - project_id
          - user_id
          - created_at
        filter: {}
        check: null
    - role: moped-editor
      permission:
        columns:
          - id
          - project_id
          - user_id
          - created_at
        filter: {}
        check: null
    - role: moped-viewer
      permission:
        columns:
          - id
          - project_id
          - user_id
          - created_at
        filter: {}
        check: null
  delete_permissions:
    - role: moped-admin
      permission:
        filter: {}
    - role: moped-editor
      permission:
        filter: {}
    - role: moped-viewer
      permission:
        filter: {}
- table:
    name: moped_users
    schema: public
  object_relationships:
    - name: moped_workgroup
      using:
        foreign_key_constraint_on: workgroup_id
  insert_permissions:
    - role: moped-admin
      permission:
        check: {}
        columns:
          - cognito_user_id
          - date_added
          - email
          - first_name
          - is_coa_staff
          - is_deleted
          - is_user_group_member
          - last_name
          - note
          - picture
          - roles
          - title
          - user_id
          - workgroup_id
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - cognito_user_id
          - date_added
          - email
          - first_name
          - is_coa_staff
          - is_deleted
          - is_user_group_member
          - last_name
          - note
          - picture
          - roles
          - title
          - user_id
          - workgroup_id
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - cognito_user_id
          - date_added
          - email
          - first_name
          - is_coa_staff
          - is_deleted
          - is_user_group_member
          - last_name
          - note
          - picture
          - roles
          - title
          - user_id
          - workgroup_id
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - cognito_user_id
          - date_added
          - email
          - first_name
          - is_coa_staff
          - is_deleted
          - is_user_group_member
          - last_name
          - note
          - picture
          - roles
          - title
          - user_id
          - workgroup_id
        filter: {}
        allow_aggregations: true
  update_permissions:
    - role: moped-admin
      permission:
        columns:
          - cognito_user_id
          - date_added
          - email
          - first_name
          - is_coa_staff
          - is_deleted
          - is_user_group_member
          - last_name
          - note
          - picture
          - roles
          - title
          - user_id
          - workgroup_id
        filter: {}
        check: {}
    - role: moped-editor
      permission:
        columns:
          - first_name
          - last_name
          - picture
          - title
        filter:
          user_id:
            _eq: x-hasura-user-db-id
        check: null
    - role: moped-viewer
      permission:
        columns:
          - first_name
          - last_name
          - picture
          - title
        filter:
          user_id:
            _eq: x-hasura-user-db-id
        check: null
- table:
    name: moped_work_types
    schema: public
  array_relationships:
    - name: moped_component_work_types
      using:
        foreign_key_constraint_on:
          column: work_type_id
          table:
            name: moped_component_work_types
            schema: public
    - name: moped_proj_component_work_types
      using:
        foreign_key_constraint_on:
          column: work_type_id
          table:
            name: moped_proj_component_work_types
            schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - id
          - name
          - key
          - is_deleted
        filter: {}
    - role: moped-editor
      permission:
        columns:
          - id
          - name
          - key
          - is_deleted
        filter: {}
    - role: moped-viewer
      permission:
        columns:
          - id
          - name
          - key
          - is_deleted
        filter: {}
- table:
    name: moped_workgroup
    schema: public
  object_relationships:
    - name: moped_department
      using:
        foreign_key_constraint_on: department_id
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - workgroup_id
          - workgroup_name
          - date_added
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - workgroup_id
          - workgroup_name
          - date_added
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - workgroup_name
          - workgroup_id
          - date_added
        filter: {}
        allow_aggregations: true
- table:
    name: project_geography
    schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - is_deleted
          - original_fk
          - table
          - component_archtype_id
          - component_id
          - feature_id
          - project_id
          - attributes
          - component_name
          - project_name
          - geography
          - council_districts
          - length_feet
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - project_id
          - feature_id
          - component_archtype_id
          - component_id
          - is_deleted
          - project_name
          - table
          - original_fk
          - component_name
          - attributes
          - geography
          - council_districts
          - length_feet
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - is_deleted
          - original_fk
          - table
          - component_archtype_id
          - component_id
          - feature_id
          - project_id
          - attributes
          - component_name
          - project_name
          - geography
          - council_districts
          - length_feet
        filter: {}
        allow_aggregations: true
- table:
    name: project_list_view
    schema: public
  select_permissions:
    - role: moped-admin
      permission:
        columns:
          - added_by
          - children_project_ids
          - completion_end_date
          - construction_start_date
          - contract_numbers
          - contractors
          - current_phase
          - current_phase_key
          - current_phase_simple
          - date_added
          - ecapris_subproject_id
          - funding_source_name
          - interim_project_id
          - is_deleted
          - parent_project_name
          - parent_project_id
          - project_description
          - project_designer
          - project_feature
          - project_id
          - project_inspector
          - project_lead
          - project_name
          - project_note
          - project_partner
          - project_sponsor
          - project_tags
          - project_team_members
          - public_process_status
          - task_orders
          - task_order_names
          - task_order_names_short
          - type_name
          - updated_at
          - knack_project_id
          - project_note_date_created
        filter: {}
        allow_aggregations: true
    - role: moped-editor
      permission:
        columns:
          - added_by
          - children_project_ids
          - completion_end_date
          - construction_start_date
          - contract_numbers
          - contractors
          - current_phase
          - current_phase_key
          - current_phase_simple
          - date_added
          - ecapris_subproject_id
          - funding_source_name
          - interim_project_id
          - is_deleted
          - parent_project_name
          - parent_project_id
          - project_description
          - project_designer
          - project_feature
          - project_id
          - project_inspector
          - project_lead
          - project_name
          - project_note
          - project_partner
          - project_sponsor
          - project_tags
          - project_team_members
          - public_process_status
          - task_orders
          - task_order_names
          - task_order_names_short
          - type_name
          - updated_at
          - knack_project_id
          - project_note_date_created
        filter: {}
        allow_aggregations: true
    - role: moped-viewer
      permission:
        columns:
          - added_by
          - children_project_ids
          - completion_end_date
          - construction_start_date
          - contract_numbers
          - contractors
          - current_phase
          - current_phase_key
          - current_phase_simple
          - date_added
          - ecapris_subproject_id
          - funding_source_name
          - interim_project_id
          - is_deleted
          - parent_project_name
          - parent_project_id
          - project_description
          - project_designer
          - project_feature
          - project_id
          - project_inspector
          - project_lead
          - project_name
          - project_note
          - project_partner
          - project_sponsor
          - project_tags
          - project_team_members
          - public_process_status
          - task_orders
          - task_order_names
          - task_order_names_short
          - type_name
          - updated_at
          - knack_project_id
          - project_note_date_created
        filter: {}
        allow_aggregations: true
- table:
    name: uniform_features
    schema: public
