table:
  name: moped_proj_tags
  schema: public
object_relationships:
  - name: moped_project
    using:
      foreign_key_constraint_on: project_id
  - name: moped_tag
    using:
      foreign_key_constraint_on: tag_id
  - name: moped_user_created_by
    using:
      foreign_key_constraint_on: created_by_user_id
  - name: moped_user_updated_by
    using:
      foreign_key_constraint_on: updated_by_user_id
insert_permissions:
  - role: moped-admin
    permission:
      check: {}
      set:
        created_by_user_id: x-hasura-user-db-id
        updated_by_user_id: x-hasura-user-db-id
      columns:
        - project_id
        - tag_id
        - is_deleted
  - role: moped-editor
    permission:
      check: {}
      set:
        created_by_user_id: x-hasura-user-db-id
        updated_by_user_id: x-hasura-user-db-id
      columns:
        - project_id
        - tag_id
        - is_deleted
select_permissions:
  - role: moped-admin
    permission:
      columns:
        - is_deleted
        - id
        - project_id
        - tag_id
        - created_by_user_id
        - updated_by_user_id
        - created_at
        - updated_at
      filter: {}
  - role: moped-editor
    permission:
      columns:
        - is_deleted
        - id
        - project_id
        - tag_id
        - created_by_user_id
        - updated_by_user_id
        - created_at
        - updated_at
      filter: {}
  - role: moped-viewer
    permission:
      columns:
        - created_at
        - created_by_user_id
        - id
        - is_deleted
        - project_id
        - tag_id
        - updated_at
        - updated_by_user_id
      filter: {}
update_permissions:
  - role: moped-admin
    permission:
      columns:
        - project_id
        - tag_id
        - is_deleted
      filter: {}
      check: {}
      set:
        updated_by_user_id: x-hasura-user-db-id
  - role: moped-editor
    permission:
      columns:
        - project_id
        - tag_id
        - is_deleted
      filter: {}
      check: {}
      set:
        updated_by_user_id: x-hasura-user-db-id
event_triggers:
  - name: activity_log_moped_project_tags
    definition:
      enable_manual: false
      insert:
        columns: '*'
      update:
        columns:
          - id
          - project_id
          - tag_id
          - is_deleted
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook_from_env: HASURA_ENDPOINT
    headers:
      - name: x-hasura-admin-secret
        value_from_env: ACTIVITY_LOG_API_SECRET
    request_transform:
      body:
        action: transform
        template: |-
          {
            "query": "mutation InsertActivity($object: moped_activity_log_insert_input! ) { insert_moped_activity_log_one(object: $object) { activity_id } }",
            "variables": {
              "object": {
                "record_id": {{ $body.event.data.new.id }},
                "record_type":  {{ $body.table.name }},
                "activity_id": {{ $body.id }},
                "record_project_id": {{ $body.event.data.new.project_id }},
                "record_data": {"event" : {{ $body.event }}},
                "description": [{"newSchema": "true"}],
                "operation_type": {{ $body.event.op }},
                "updated_by_user_id": {{ $session_variables?['x-hasura-user-db-id'] ?? 1}}
              }
          }
                                  }
      method: POST
      query_params: {}
      template_engine: Kriti
      version: 2
    cleanup_config:
      batch_size: 10000
      clean_invocation_logs: false
      clear_older_than: 168
      paused: true
      schedule: 0 0 * * *
      timeout: 60
